# Inna 

The main source file is
`J:/2017/Inna/Thom_Inna/Inna1-AllFonts.ufoz`
This zipped UFO is server friendly. 

![Fontje](AllGlyphs.png)


### Pixels
##### naming
The pixel glyphs are named: `pixel.<value>`. The value correspondence with value on the pixel axis. That goes from 0 to 1000. (But could be changed to whatever values we prefer.)

##### compatible
Glyph substitution does not work on a component level, sad but true.
So these pixel need to interpolate with each other. This means if you add a pixel with more points in the contour, or something with more contours, all other pixels need to be updated... 
TODO: 
 - this must get a better solution

##### note = name
In the note of the glyph you name the pixel, this will be used for the named instance. (For now it generates the named instance as default width and the narrower width so that the pixels are square)
![note](note.png)
![instances](instances.png)
 
### Produce a variable font

1. Open the `Inna1-AllFonts.ufoz` in RoboFont
2. Run `designSpacer.py` in/via RoboFont
3. Terminal: `cd` into the project folder and `make`

